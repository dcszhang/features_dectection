WARNING:rattle.recover:Fallthrough target 0x806 not found in blockmap
Identified Functions:
	Function: _dispatch starts at offset 0, argument offsets: []
	Function: _fallthrough starts at offset 13, argument offsets: [(0, 32)]
	Function: queryBalance() starts at offset 186, argument offsets: []
	Function: tokenName() starts at offset 229, argument offsets: []
	Function: tokenSymbol() starts at offset 373, argument offsets: []
	Function: owner() starts at offset 517, argument offsets: []
	Function: withdrawal() starts at offset 582, argument offsets: []
	Function: start(address) starts at offset 605, argument offsets: [(4, 36)]

Storage Locations: [0, 1, 2]
[+] Contract can send ether from following functions:
	- start(address)
		%490 = CALL(%483, %479, %481, %488, %489, %488, #0)
			To:	%479 = AND(#ffffffffffffffffffffffffffffffffffffffff, %186)
			Trace:
				%479 = AND(#ffffffffffffffffffffffffffffffffffffffff, %186)
				%186 = AND(#ffffffffffffffffffffffffffffffffffffffff, %184)
				%184 = CALLDATALOAD(#4)
			Value:	%481 = CALLVALUE()

	- withdrawal()
		%401 = CALL(%394, %391, %361, %399, %400, %399, #0)
			To:	%391 = AND(#ffffffffffffffffffffffffffffffffffffffff, %389)
			Trace:
				%391 = AND(#ffffffffffffffffffffffffffffffffffffffff, %389)
				%389 = AND(#ffffffffffffffffffffffffffffffffffffffff, %387)
				%387 = DIV(%384, %386)
				%384 = SLOAD(#2)
				%386 = EXP(#100, #0)
			Value:	%361 = SELFBALANCE()

[+] Contract calls:
	%490 = CALL(%483, %479, %481, %488, %489, %488, #0)
		Gas: %483			%483 = MUL(%482, #8fc)
		To: %479 			%479 = AND(#ffffffffffffffffffffffffffffffffffffffff, %186)
		Value: %481			%481 = CALLVALUE()
		In Data Offset: %488		%488 = MLOAD(#40)
		In Data Size: %489		%489 = SUB(%485, %488)
		Out Data Offset: %488		%488 = MLOAD(#40)
		Out Data Size: #0

	%401 = CALL(%394, %391, %361, %399, %400, %399, #0)
		Gas: %394			%394 = MUL(%393, #8fc)
		To: %391 			%391 = AND(#ffffffffffffffffffffffffffffffffffffffff, %389)
		Value: %361			%361 = SELFBALANCE()
		In Data Offset: %399		%399 = MLOAD(#40)
		In Data Size: %400		%400 = SUB(%396, %399)
		Out Data Offset: %399		%399 = MLOAD(#40)
		Out Data Size: #0

[+] Wrote PDG to output/pdg_0x0.pdf
[+] Wrote PDG to output/pdg_0xd.pdf
[+] Wrote PDG to output/pdg_0xba.pdf
[+] Wrote PDG to output/pdg_0xe5.pdf
[+] Wrote PDG to output/pdg_0x175.pdf
[+] Wrote PDG to output/pdg_0x205.pdf
[+] Wrote PDG to output/pdg_0x246.pdf
[+] Wrote PDG to output/pdg_0x25d.pdf
Collected 69 basic block sequences for training.
Vocabulary size: 35
Vector size: 64
Sample words: ['ADD', 'MSTORE', 'MLOAD', 'SUB', 'AND', 'JUMPI', 'ISZERO', 'DIV', 'SLOAD', 'JUMP']
[+] Wrote SDG to output/sdg.pdf
[+] Wrote backtrack paths to output/"withdrawal()_CallBacktrack_0".pdf
[+] Wrote backtrack paths to output/"start(address)_CallBacktrack_0".pdf
--- Printing Function Embeddings and Adjacency Matrices ---
Function: withdrawal():CallBacktrack_0
Node Embeddings:
  Block 0x52c: [-0.00047653 -0.00255694  0.00574727  0.00114984 -0.00159538]...
  Block 0x4b0: [ 0.00359963 -0.00467282  0.01110704  0.00501156 -0.00637331]...
Adjacency Matrix:
  Edge Index (2, E):
[[1 1 1 0 1]
 [1 0 1 0 0]]
  Edge Types (E):
[0, 0, 1, 1, 1]
--------------------------------------------------
Function: start(address):CallBacktrack_0
Node Embeddings:
  Block 0x6ff: [-0.00080023  0.00018577  0.00919029  0.00150308 -0.0040067 ]...
  Block 0x25d: [ 0.00349108 -0.00599026  0.01029575  0.00645357 -0.00057955]...
  Block 0x273: [-0.00311086  0.00077665  0.00113284  0.00953054 -0.00051102]...
Adjacency Matrix:
  Edge Index (2, E):
[[1 1 2 1 1 2 2 0]
 [1 2 0 1 2 2 0 0]]
  Edge Types (E):
[0, 0, 0, 1, 1, 1, 1, 1]
--------------------------------------------------
--- Printing Function Embeddings and Adjacency Matrices ---
Graph 0
  Node Features Shape: torch.Size([2, 64])
  Edge Index Shape: torch.Size([2, 5])
  Edge Types Shape: torch.Size([5])
--------------------------------------------------
Graph 1
  Node Features Shape: torch.Size([3, 64])
  Edge Index Shape: torch.Size([2, 8])
  Edge Types Shape: torch.Size([8])
--------------------------------------------------
Graph Embeddings Shape: torch.Size([2, 32])
Graph Embeddings: tensor([[-0.0224, -0.0887,  0.0510,  0.0067,  0.0397, -0.0244, -0.1258,  0.1201,
          0.1662, -0.0481, -0.1028, -0.1204,  0.0514, -0.0128, -0.2968, -0.0507,
         -0.1359, -0.0863,  0.1535,  0.0332, -0.0363, -0.0061, -0.0738,  0.1811,
         -0.0296,  0.0374, -0.0578, -0.1339,  0.0020, -0.0676, -0.0806,  0.0249],
        [ 0.0219, -0.1034,  0.0376, -0.0607,  0.0272, -0.0477, -0.1827,  0.1539,
          0.2159, -0.0371, -0.1175, -0.1020,  0.0967, -0.0327, -0.2982, -0.1110,
         -0.0859, -0.1582,  0.1494,  0.0148, -0.0366, -0.0241,  0.0151,  0.1710,
         -0.0170,  0.0315, -0.1093, -0.1547, -0.0145, -0.0874, -0.1521,  0.0393]],
       grad_fn=<CatBackward0>)
Graph Similarity Matrix: tensor([[1.0000, 0.9527],
        [0.9527, 1.0000]], grad_fn=<AddBackward0>)

Graph Pairwise Similarities:
Similarity between Graph 0 and Graph 1: 95.2691%
